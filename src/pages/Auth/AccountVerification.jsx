import React, { useEffect, useState } from 'react'
import { useSearchParams, Navigate } from 'react-router-dom'
import Loading from '~/components/Loading/Loading'

import { verifyUserAPI } from '~/apis/axios'
function AccountVerification() {
    // l·∫•y gi√° tr·ªã email , token t·ª´ url
    let [searchParams] = useSearchParams()

    const { email, token } = Object.fromEntries([...searchParams])

    // console.log("üöÄ ~ AccountVerification ~ token:", token)
    // console.log("üöÄ ~ AccountVerification ~ email:", email)
    // t·∫°o 1 Bi·∫øn state ƒë·ªÉ bi·∫øt ƒë∆∞·ª£c ƒë√£ verifi t√†i kho·∫£n th√†nh c√¥ng hay ch∆∞a

    const [verified, setVerified] = useState(false)

    // g·ªçi API ƒë·ªÉ verifi t√†i kho·∫£n

    useEffect(() => {
        if(email && token){
         verifyUserAPI({email, token}).then(()=>setVerified(true))
        }
    }, [email, token])

    // n·∫øu url c√≥ v·∫•n ƒë·ªÅ , kh√¥ng t·ªìn t·∫°i 1 trong 2 gi√° tr·ªã email v√† token th√¨ ƒë√° ra 404 lu√¥n
    if (!email || !token) {
        return <Navigate to='/404' />
    }
    // n·∫øu ch∆∞a verifi xong th√¨ hi·ªán loading 
    if (!verified) {
        return <Loading caption={'loading .....'} />
    }
    // cu·ªëi c√πng kh√¥ng c√≥ v·∫•n ƒë·ªÅ d√¨ + v·ªõi verify th√†nh c√¥ng th√¨ ƒëi·ªÅu h∆∞·ªõng v·ªÅ v·ªÅ trang loading c√πng gi√° tr·ªã verifiedEmail   
    return <Navigate to={`/login?verifiedEmail=${email}`} />
}

export default AccountVerification